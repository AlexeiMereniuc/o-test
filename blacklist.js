const progressBox=document.createElement("div");progressBox.style.position="fixed",progressBox.style.bottom="20px",progressBox.style.right="20px",progressBox.style.padding="15px 20px",progressBox.style.background="rgba(0,0,0,0.8)",progressBox.style.color="#fff",progressBox.style.borderRadius="10px",progressBox.style.fontFamily="monospace",progressBox.style.zIndex="99999",progressBox.style.boxShadow="0 0 10px rgba(0,0,0,0.5)",progressBox.innerHTML='\n  <div style="font-weight:bold;margin-bottom:6px;">üö´ –ü—Ä–æ–≥—Ä–µ—Å—Å –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏</div>\n  <div>–í—Å–µ–≥–æ: <span id="totalCount">0</span></div>\n  <div>–£–∂–µ –±—ã–ª–∏: <span id="alreadyCount">0</span></div>\n  <div>–î–æ–±–∞–≤–ª–µ–Ω–æ: <span id="blockedCount">0</span></div>\n  <div style="margin-top:6px;">–ü—Ä–æ–≥—Ä–µ—Å—Å: <span id="progressPercent">0%</span></div>\n  <div style="background:#333;width:150px;height:6px;border-radius:3px;overflow:hidden;margin-top:4px;">\n    <div id="progressBar" style="background:#4caf50;height:100%;width:0%;transition:width 0.3s;"></div>\n  </div>\n',document.body.appendChild(progressBox);const totalEl=document.getElementById("totalCount"),alreadyEl=document.getElementById("alreadyCount"),blockedEl=document.getElementById("blockedCount"),progressEl=document.getElementById("progressPercent"),barEl=document.getElementById("progressBar");let href;try{href=window.location.href.includes("odnoklassniki")?"/odnoklassniki/"+PAGE_goto.toString().match(/[abcdef0-9]{32}/g)[0]+"/DO/":window.location.href.includes("moymir")?"/moymir/"+PAGE_goto.toString().match(/[abcdef0-9]{32}/g)[0]+"/DO/":window.location.href.includes("draugiem")?"/draugiem/"+PAGE_goto.toString().match(/[abcdef0-9]{32}/g)[0]+"/DO/":window.location.pathname+"DO/"}catch(e){href=window.location.pathname+"DO/"}const playersUid=[266893464,11781826,11781827,11781828,11781829,11781830,11781831,11781832,11781833,11781834,11781835,11781836,11781837,11781838,11781840,11781839,11781841,11781842,11781843,11781844,11781845,11781846,11781847,11781848,11781849,11781850,11781871,11781873,11781874,11781876,11781879,11781883,11781892,1623105,11781894,11781915,11781917,11781975,11781976,11781977,11781978,11781979,11781980,11781981,11781982,11781983,11781984,11781985,11781986,11781987,11781988,11781989,11781990,11781991,11781992,11781993,11781994,11781995,11781996,11781997,11781999,11782e3,11782059,11782060,11782061,11782062,11782077,11782078,11782079,11782080,11782081,11782082,11782083,11782095,11782096,11782097,11782098,11782099,11782100,11782101,11782102,11782103,11782104,11782105,11782106,11782107,11782108,11782109,11782110,11782111,11782112,11782113,11782114,11782122,11782125,11782128,11782129,11782131,11782132,11782133,11782134,11782136,11782137,11782138,11782139,9558730,1762756,8076555,11752052,9744815,1862150,9265415,6164212,8682451,10342511,10712011,8896022,9832392,9314771,7671482,8133004,5641974,9188820,11279693,11782152,11782154,11782155,11782156,11782158,11782159,11782160,11782161,11782162,11782164,11782169,11782170,11782171,11782180,11782181,11782182,11782184,11782186,11782187,11782189,11782193,11782195,11782199,11782200,11782201,11782202,11782204,11782205,11782206,11782207,11782209,11782210,11782211,11782213,11782215,11782216,11782217,11782218,11782219,11782220,11782222,11782224,11782226,11782229,11782231,11782232,11782233,11782236,10598957,10597641,10597627,5979100,6268618,10069669,11780988,5178447,6294646,10880835,5070371,6034093,2341245,782741,11721691,6591748,10660997,6361441,9622171,11693161,11186973,2223556,11704456,11713918,2357388,320527,3060118,10259602,9114476,10227042,10111463,9136012,7975006,11716438,8955770,6297521,10484801,10068827,11757104,5657237,8087878,11715212,5333159,10279677,11691076,9107982,11673367,11680677,11169444,9348611,10174367,8338555,10497265,1179067,11731858,11746760,9603424,11746051,11174257,5229828,9541451,11455362,6783787,10578144,11073952,9194642,5257204,5699346,11309918,8919325,7291101,11475138,11695922,7894071,9936908,8093942,11714154,10054835,2896650,7916783,1163006,1613081,10522680,8991943,8576467,11205456,8351721,8824221,7127818,10972190,10610894,10143607,6259870,1379019,10863062,9433171,6349940,10002463,2554812,10895778,10588875,6518893,9367347,9949402,11695914,9436235,2699878,10113400,9030484,8928129,8844316,11636835,9139234,7539236,9368026,8853190,9256846,8820204,3021230,3108969,9723308,7964666,10405826,9448070,3042345,3025224,10526270,10039229,8525199,9527903,6749859,1926178,11524893,10119385,10163571,10842799,2884777,8948847,11717944,11470795,11490568,2021280,7486538,1415266,2931379,8625200,2424618,7801690,5353818,8075725,5202323,10655698,10039221,9857258,6347590,2678757,8550035,5716795,45433939,11772933,11779916,11779917,11779950,11779951,11779952,11779954,11779957,11779960,11779969,11779970,8977382,11780206,11780207,11780208,11780209,11780211,11780212,11780213,11780214,11780215,11780216,11780389,11780390,11780391,11780392,11780393,11780394,11780395,11780396,11780397,11780398,11780399,11780400,11780401,11780402,10816734,188810657,11778960,11777109,11768647,11779509,11779913,11779914,11779915,11779918,11779938,11779939,11779940,11779941,11779942,11779944,11779945,11779946,11779947,11779948,11779949,11779953,11779955,11779956,11779958,11779959,11779961,11779962,11779963,11779964,11779965,11779966,11779967,11779968,11779971,11779972,11779973,11779974,11779975,11779976,11779977,11779943];function sendMafiaRequest(e){const t=new URLSearchParams;for(const o in e)if("object"==typeof e[o])for(const n in e[o])t.append(`args[${n}]`,e[o][n]);else t.append(o,e[o]);return fetch(href+Math.random(),{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded",Accept:"application/json, text/javascript, */*; q=0.01","X-Requested-With":"XMLHttpRequest"},body:t.toString()}).then((e=>{if(!e.ok)throw new Error(`HTTP error! Status: ${e.status}`);return e.json()}))}async function toBlacklist(e){if((await getBlacklist()).includes(Number(e)))return!1;const t={method:"mbk_do",id:e},o=await sendMafiaRequest(t).catch(console.error);return Boolean(o?.ret)}async function getBlacklist(){const e=await sendMafiaRequest({method:"blocks"}).catch(console.error);return e?.arr?.length?e.arr.map((e=>Number(e[0]))):[]}(async()=>{const e=await getBlacklist();let t=0,o=0;const n=playersUid.length;totalEl.textContent=n;for(let r=0;r<playersUid.length;r++){const s=playersUid[r];if(e.includes(s))t++,console.debug("–£–∂–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω",s);else{await toBlacklist(s)&&(o++,console.debug("–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω",s))}const a=((r+1)/n*100).toFixed(1);alreadyEl.textContent=t,blockedEl.textContent=o,progressEl.textContent=a+"%",barEl.style.width=a+"%"}progressBox.innerHTML+='<div style="margin-top:6px;color:#4caf50;">‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ!</div>'})();
